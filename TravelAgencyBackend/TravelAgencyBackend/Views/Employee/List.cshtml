@model IEnumerable<TravelAgencyBackend.ViewModels.Employee.EmployeeListViewModel>

@{
    ViewData["Title"] = "員工列表";
}

<h1>員工基本資料</h1>

<form asp-action="List" method="get" class="mb-3">
    <div class="input-group mb-3">
        <input type="text" name="txtKeyword" class="form-control" placeholder="輸入姓名、電話或信箱進行搜尋" value="@ViewBag.Keyword" />
        <button type="submit">搜尋</button>
    </div>
</form>

<p>
    <a asp-action="Create">建立新員工</a>
</p>

<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            <th>序</th>
            <th>@Html.DisplayNameFor(model => model.Name)</th>
            <th>@Html.DisplayNameFor(model => model.Gender)</th>
            <th>@Html.DisplayNameFor(model => model.BirthDate)</th>
            <th>@Html.DisplayNameFor(model => model.Phone)</th>
            <th>@Html.DisplayNameFor(model => model.Email)</th>
            <th>@Html.DisplayNameFor(model => model.Address)</th>
            <th>@Html.DisplayNameFor(model => model.HireDate)</th>
            <th>@Html.DisplayNameFor(model => model.Status)</th>
            <th>@Html.DisplayNameFor(model => model.Note)</th>
            <th>操作</th>
        </tr>
    </thead>
    <tbody>
        @{
            int count = 0;
            foreach (var item in Model)
            {
                count++;
                <tr>
                    <td>@count</td>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Gender)</td>
                    <td>@item.BirthDate.ToString("yyyy/MM/dd")</td>
                    <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.Address)</td>
                    <td>@item.HireDate.ToString("yyyy/MM/dd")</td>
                    <td>@Html.DisplayFor(modelItem => item.Status)</td>
                    <td>@Html.DisplayFor(modelItem => item.Note)</td>
                    <td>
                        @Html.ActionLink("修改", "Edit", "Employee", new { id = item.EmployeeId }, null) |
                        @Html.ActionLink("刪除", "Delete", "Employee", new { id = item.EmployeeId }, new { onclick = "return confirm('確定要刪除嗎?')" })
                    </td>
                </tr>
            }
        }
    </tbody>
</table>



@* 分頁版 *@
@* @model TravelAgencyBackend.ViewModels.Employee.EmployeeListViewModel


@{
    ViewData["Title"] = "員工列表";
}
@{
    int totalPages = (int)Math.Ceiling((double)Model.TotalCount / Model.PageSize);
}

<style>
    .center {
        text-align: center;
    }
</style>

<h1>員工基本資料</h1>

<form asp-action="List" method="get" class="mb-3">
    <input type="text" name="SearchText" value="@Model.SearchText" class="form-control d-inline w-auto" placeholder="搜尋" />

    <select asp-for="FilterStatus"
            asp-items="Html.GetEnumSelectList<EmployeeStatus>()"
            class="form-select d-inline w-auto mx-2">
        <option value="">全部狀態</option>
    </select>

    <select name="PageSize" class="form-select d-inline w-auto mx-2" onchange="this.form.submit()">
        @foreach (var size in new[] { 10, 25, 50, 100 })
        {
            <option value="@size" selected="@(Model.PageSize == size)">
                每頁 @size 筆
            </option>
        }
    </select>

    <button type="submit" class="btn btn-outline-primary">搜尋</button>
    <a asp-action="Create" class="btn btn-outline-primary">新增員工</a>
</form>

<p class="text-muted">
    第 @Model.Page 頁 / 共 @totalPages 頁，總筆數：@Model.TotalCount 筆
</p>

<nav>
    <ul class="pagination">
        @for (int i = 1; i <= totalPages; i++)
        {
            var activeClass = i == Model.Page ? "active" : "";
            <li class="page-item @activeClass">
                <a class="page-link"
                   asp-action="List"
                   asp-route-SearchText="@Model.SearchText"
                   asp-route-FilterStatus="@Model.FilterStatus"
                   asp-route-PageSize="@Model.PageSize"
                   asp-route-Page="@i">
                    @i
                </a>
            </li>
        }
    </ul>
</nav>

<table class="table table-striped table-hover">
    <thead class="table-dark center">
        <tr>
            <th>序</th>
            <th>@Html.DisplayNameFor(m => m.Employees.First().Name)</th>
            <th>@Html.DisplayNameFor(m => m.Employees.First().Gender)</th>
            <th>@Html.DisplayNameFor(m => m.Employees.First().BirthDate)</th>
            <th>@Html.DisplayNameFor(m => m.Employees.First().Phone)</th>
            <th>@Html.DisplayNameFor(m => m.Employees.First().Email)</th>
            <th>@Html.DisplayNameFor(m => m.Employees.First().Address)</th>
            <th>@Html.DisplayNameFor(m => m.Employees.First().HireDate)</th>
            <th>@Html.DisplayNameFor(m => m.Employees.First().Status)</th>
            <th>@Html.DisplayNameFor(m => m.Employees.First().Note)</th>
            <th>操作</th>
        </tr>
    </thead>
    <tbody>
        @{
            int count = (Model.Page - 1) * Model.PageSize;
            foreach (var item in Model.Employees)
            {
                count++;
                <tr class="center">
                    <td>@count</td>
                    <td>@item.Name</td>
                    <td>@item.Gender</td>
                    <td>@item.BirthDate.ToString("yyyy/MM/dd")</td>
                    <td>@item.Phone</td>
                    <td>@item.Email</td>
                    <td>@item.Address</td>
                    <td>@item.HireDate.ToString("yyyy/MM/dd")</td>
                    <td>
                        <span class="badge @(item.Status == EmployeeStatus.在職 ? "bg-success" :
                                             item.Status == EmployeeStatus.停職 ? "bg-danger" :
                                             item.Status == EmployeeStatus.已刪除 ? "bg-secondary" : "bg-light")">
                            @item.Status
                        </span>
                    </td>
                    <td>@item.Note</td>
                    <td>
                        @Html.ActionLink("修改", "Edit", "Employee", new { id = item.EmployeeId }, new { @class = "btn btn-outline-info btn-sm" }) |
                        @Html.ActionLink("刪除", "Delete", "Employee", new { id = item.EmployeeId }, new { @class = "btn btn-outline-danger btn-sm", onclick = "return confirm('確定要刪除嗎?')" })
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
 *@